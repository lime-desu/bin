#!/usr/bin/env bash
# Colors                                 # Base Commands
declare blu red grn ylw cyn rst bld mgn QRY PRVW QRY_PRFX QRY_SFFX AWK_VAR QRY_READ DNFZF_DIR
blu="$(tput setaf 4)"
QRY="dnf --cacheonly --quiet repoquery "
red="$(tput setaf 1)"
PRVW="dnf --cacheonly --quiet --color=always info"
grn="$(tput setaf 2)"
QRY_PRFX='  '
ylw="$(tput setaf 3)"
QRY_SFFX=' > '
cyn="$(tput setaf 6)"
QRY_READ="read -rs -p $'\n${blu}$(tput bold)Press any key to continue...${rst}' && printf '\n'" #bold text isnt working so i didn't use variable
mgn="$(tput setaf 5)"
AWK_VAR="awk -v red=$red -v grn=$grn -v ylw=$ylw -v blu=$blu -v mgn=$mgn -v cyn=$cyn -v rst=\$(tput sgr0) -v bld=\$(tput bold)"
rst="$(tput sgr0)"
bld="$(tput bold)"

basename="$(basename "$0")"
if ! hash fzf &>/dev/null; then
	printf "${bld}${red}Error:${rst}${ylw} Missing dependency\n${bld}${cyn}Fzf${rst} is required to use %s.\n" "${bld}${blu}${basename}" >&2
	exit 64
fi
DNFZF_DIR="$HOME/.cache/fzf/${basename}"
if [ ! -d "${DNFZF_DIR}" ]; then
	mkdir -p "${DNFZF_DIR}"
fi

# Install mode
declare INS_QRYS INS_PRMPT INS_CMD_PRVW INS_CLR_PRVW
INS_QRYS="${QRY} --available --qf '${bld}${cyn}%{name}${rst} - ${blu}%{summary}'" INS_PRMPT="${cyn}${QRY_PRFX}Install packages${QRY_SFFX}"
INS_CMD_PRVW="${PRVW}"
INS_CLR_PRVW="${AWK_VAR} -F\":\" '{print blu bld \$1 rst cyn \$2}'"
# Remove mode
declare RMV_QRYS RMV_PRMPT RMV_CMD_PRVW RMV_CLR_PRVW
RMV_QRYS="${QRY} --installed --qf '${bld}${red}%{name}${rst} - ${grn}%{summary}'" RMV_PRMPT="${red}${QRY_PRFX}Remove packages${QRY_SFFX}"
RMV_CMD_PRVW="${PRVW} --installed"
RMV_CLR_PRVW="${AWK_VAR} -F\":\" '{print grn bld \$1 rst red \$2}'"
# Remove-userinstalled mode
declare RUI_QRYS RUI_PRMPT RUI_CMD_PRVW RUI_CLR_PRVW
RUI_QRYS="${QRY} --userinstalled --qf '${bld}${ylw}%{name}${rst} - ${mgn}%{summary}'" RUI_PRMPT="${ylw}${QRY_PRFX}User-Installed packages${QRY_SFFX}"
RUI_CMD_PRVW="${PRVW} --installed"
RUI_CLR_PRVW="${AWK_VAR} -F\":\" '{print mgn bld \$1 rst ylw \$2}'"
# Updates mode
declare UPD_QRY UPD_QRYS UPD_CMD_PRVW UPD_PRMPT
UPD_QRY="${QRY} --upgrades --qf '${grn}%{name}'" UPD_PRMPT="${grn}${QRY_PRFX}Upgrade packages${QRY_SFFX}"
UPD_CMD_PRVW="${PRVW}"
UPD_QRYS="
if [[ \$(${UPD_QRY} | wc -c) -ne 0 ]]; then 
    ${UPD_QRY}; 
else 
    echo -e ${grn}'No updates available'.; 
    echo -e 'Try refreshing metadata cache...'; 
fi
"
# History Mode
declare HISTORY HISTORY_CMD_PRVW
HISTORY="dnf history | tail -n +3 | ${AWK_VAR} -F\"|\" '{print mgn \$1 cyn bld \$2 \"\t\" rst blu \$3}'"
HISTORY_CMD_PRVW="dnf --color=always history info {+1}"

SHOW_HELP=$(
	cat <<-EOF

		    ${blu}${bld}${basename}${rst}
		    ${blu}Interactive package manager for Fedora

		    ${blu}${bld}Alt-i       ${rst}${cyn}Install${rst} package/s ${blu}(default)
		    ${blu}${bld}Alt-r       ${rst}${red}Remove${rst} package/s
		    ${blu}${bld}Alt-e       ${rst}${ylw}Erase/Remove${rst} User-Installed package/s
		    ${blu}${bld}Alt-u       ${rst}${grn}Updates mode
		    ${blu}${bld}Alt-m       ${rst}Update package metadata cache
		    ${blu}${bld}Alt-a       ${rst}Auto remove packages/dependencies
		    ${blu}${bld}Alt-d       ${rst}Distro Sync (synchronize package/s)

		    ${blu}${bld}Ctrl-h      ${rst}${mgn}History mode
		    ${blu}${bld}Ctrl-z      ${rst}Undo History 
		    ${blu}${bld}Ctrl-y      ${rst}Redo History

		    ${blu}${bld}Ctrl-a      ${rst}Select all
		    ${blu}${bld}Ctrl-e      ${rst}Edit/configure DNF 
		    ${blu}${bld}Delete      ${rst}Delete expired packages cache
		    ${blu}${bld}Delete      ${rst}And ${blu}${basename}${rst} - install cache

		    ${blu}${bld}Alt-t       ${rst}Topgrade (upgrade everything)

		    ${blu}${bld}Enter       ${rst}Confirm selection or View History
		    ${blu}${bld}Tab         ${rst}Mark package ()
		    ${blu}${bld}Shift-Tab   ${rst}Unmark package

		    ${blu}${bld}Alt-?       ${rst}Help (this page)
		    ${blu}${bld}ESC         ${rst}Quit                          
	EOF
)

declare tmp_file
if tmp_file="$(mktemp --tmpdir "${basename}".XXXXXX)"; then
	printf 'in' >"${tmp_file}" && SHELL='/bin/bash' \
		FZF_DEFAULT_COMMAND="cat < \"${DNFZF_DIR}/install\" || ${INS_QRYS} > \"${DNFZF_DIR}/install\";" \
		fzf --ansi --multi --tiebreak=begin --query="$*" --sync --no-separator \
		--preview="${INS_CMD_PRVW} {1} || ${INS_CLR_PRVW}" \
		--preview-window "50%,<50(up,60%,border-rounded)" \
		--prompt="${INS_PRMPT}" --layout=reverse-list --marker=' ' \
		--header=" ${basename} | Press Alt+? for help or ESC to quit" --header-first \
		--bind="enter:execute(
	if grep -q 'in' \"${tmp_file}\"; then 
	    sudo dnf install {+1}; ${QRY_READ}
	elif grep -q 'rm' \"${tmp_file}\"; then 
	    sudo dnf remove {+1}; ${QRY_READ}
	elif grep -q 'up' \"${tmp_file}\"; then 
	    sudo dnf upgrade {+}; ${QRY_READ}
	elif grep -q 'hist' \"${tmp_file}\"; then 
	    ${HISTORY_CMD_PRVW} | less;
	fi;)" \
		--bind "alt-i:reload(cat < \"${DNFZF_DIR}/install\")+change-preview(${INS_CMD_PRVW} {1} | ${INS_CLR_PRVW})+change-prompt(${INS_PRMPT})+execute-silent(printf 'in' > \"${tmp_file}\")+first" \
		--bind "alt-r:reload(${RMV_QRYS})+change-preview(${RMV_CMD_PRVW} {1} | ${RMV_CLR_PRVW})+change-prompt(${RMV_PRMPT})+execute-silent(printf 'rm' > \"${tmp_file}\")+first" \
		--bind "alt-e:reload(${RUI_QRYS})+change-preview(${RUI_CMD_PRVW} {1} | ${RUI_CLR_PRVW})+change-prompt(${RUI_PRMPT})+execute-silent(printf 'rm' > \"${tmp_file}\")+first" \
		--bind "alt-u:reload(${UPD_QRYS})+change-preview(${UPD_CMD_PRVW} {1})+change-prompt(${UPD_PRMPT})+execute-silent(printf 'up' > \"${tmp_file}\")+first" \
		--bind "ctrl-h:reload($HISTORY)+change-prompt(  History > )+change-preview($HISTORY_CMD_PRVW)+execute-silent(printf 'hist' > \"${tmp_file}\")+first" \
		--bind "ctrl-z:execute(sudo dnf history undo {1}; ${QRY_READ})" \
		--bind "ctrl-y:execute(sudo dnf history redo {1}; ${QRY_READ})" \
		--bind "alt-t:execute(sudo dnf makecache;topgrade; ${QRY_READ})" \
		--bind "alt-m:execute(sudo dnf makecache; ${QRY_READ})" \
		--bind "alt-a:execute(sudo dnf autoremove;${QRY_READ})" \
		--bind "ctrl-e:execute(sudo \$EDITOR /etc/dnf/dnf.conf > /dev/tty)" \
		--bind "del:execute(dnf clean expire-cache packages && rm -f \"${DNFZF_DIR}/install\"; echo -e '${blu}${basename} cache has been deleted\n'; ${QRY_READ})" \
		--bind "alt-d:execute(sudo dnf distrosync;${QRY_READ})" \
		--bind "alt-?:preview(printf '${SHOW_HELP}')" \
		--bind "alt-/:toggle-preview-wrap" \
		--bind "ctrl-/:execute(${PRVW} {+1} | less )" \
		--bind "ctrl-a:select-all"
	rm -f "${tmp_file}" &>/dev/null
else
	printf "${bld}${red}Error:${rst} Failed to create tmp file." >&2
	exit 65
fi
