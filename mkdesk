#!/usr/bin/env bash

app_name=""
command=""
icon_path=""
comments=""
desktop_dir="$HOME/.local/share/applications"
desktop_files=("$desktop_dir"/*.desktop)

list_desktop_files() {
	local i=1
	for desktop_file in "${desktop_files[@]}"; do
		echo "$i. ${desktop_file##*/}"
		((i++))
	done
}

get_app_name() {
	while true; do
		read -rp "Enter the name of the application: " app_name
		[ -z "$app_name" ] || break
		echo "Error: desktop name cannot be empty. Please try again."
	done
}

get_command() {
	while true; do
		read -rp "Command to execute: " command
		[ -z "$command" ] || break
		echo "Error: command cannot be empty. Please try again."
	done
}

validate_command() {
	if ! command -v "$command" >/dev/null; then
		echo "Error: $command is not a valid command."
		get_command
		validate_command
	fi
}

get_icon_path() { read -rp "Enter the path to the icon (blank for default): " icon_path; }

validate_icon_path() {
	if [ -n "$icon_path" ] && [ ! -f "$icon_path" ]; then
		echo "Error: $icon_path is not a valid icon/image file path."
		get_icon_path
		validate_icon_path
	fi
}

get_comments() { read -rp "Enter additional comments to include (blank for none): " comments; }

get_desktop_file_selection() {
	echo "Select a desktop file:"
	# strip only the file name
	select desktop_file in "${desktop_files[@]##*/}"; do
		if [[ -n "$desktop_file" ]]; then
			break
		else
			echo "Invalid selection. Please try again."
		fi
	done
}

edit_desktop_file() { get_desktop_file_selection && ${VISUAL:-${EDITOR:-vim}} "$desktop_dir/$desktop_file"; }
delete_desktop_file() { get_desktop_file_selection && rm -rv "${desktop_dir:?}/${desktop_file:?}"; }
rename_desktop_file() {
	get_desktop_file_selection
	read -rp "Enter the new name for the desktop file: " new_name
	mv -v "${desktop_dir:?}/${desktop_file:?}" "${desktop_dir}/${new_name}.desktop"
}

create_desktop_file() {
	# Ensure it isn't empty
	[[ -z $app_name ]] && get_app_name
	[[ -z $comments ]] && get_comments
	[[ -z $command ]] && {
		get_command
		validate_command
	}
	[[ -z $icon_path ]] && {
		get_icon_path
		validate_icon_path
	}

	desktop_file="$desktop_dir/$app_name.desktop"
	[ -d "$desktop_dir" ] || mkdir -p "$desktop_dir"

	cat >"$desktop_file" <<EOF
[Desktop Entry]
Name=$app_name
Comment=$comments
Exec=$command
Icon=$icon_path
Type=Application
EOF

	if [ -f "$desktop_file" ]; then
		echo "Desktop entry created at $desktop_file"
	else
		echo "Error: Failed to create desktop entry."
	fi
}

show_help() {
	cat <<EOF
Usage: $(basename "$0") [OPTIONS] APP_NAME

Create a desktop file for an application.

OPTIONS:
  -l, --list)    List the available desktop files 
                 (from: $desktop_dir)
  -e, --edit     Edit an existing desktop file.
  -r, --rename   Rename desktop application
  -d, --delete   Delete desktop application
  -h, --help     Show this help message and exit.

APP_NAME         The name of the application.
EOF
}

while [[ $# -gt 0 ]]; do
	key="$1"
	case $key in
	-h | --help) show_help && exit 0 ;;
	-l | --list) list_desktop_files && exit 0 ;;
	-e | --edit) edit_desktop_file && exit 0 ;;
	-d | --delete) delete_desktop_file && exit 0 ;;
	-r | --rename) rename_desktop_file && exit 0 ;;
	*)
		app_name="$1"
		shift
		;;
	esac
done

create_desktop_file
